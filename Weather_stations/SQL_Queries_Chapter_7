-- Chapter 7 commands

-- Categorizando o rigor do vento:
SELECT report_code, year, month, day, wind_speed,
CASE
    WHEN wind_speed >= 18 THEN 'HIGH'
    WHEN wind_speed BETWEEN 9 and 17 then 'MODERATE'
    ELSE 'LOW'
END AS wind_severity
FROM station_data;

-- Consulta mais eficiente, já que o SQL lê de cima para baixo e, se uma informação é correta, ele não avalia as demais
SELECT report_code, year, month, day, wind_speed,
CASE
    WHEN wind_speed >= 18 THEN 'HIGH'
    WHEN wind_speed >= 9 then 'MODERATE'
    ELSE 'LOW'
END AS wind_severity
FROM station_data;

-- Executando o agrupamento dos dados por year e wind_severity
SELECT year,
CASE
    WHEN wind_speed >= 18 THEN 'HIGH'
    WHEN wind_speed >= 9 then 'MODERATE'
    ELSE 'LOW'
END AS wind_severity,
--Conta a quantidade de registros baseada nas condições acima: separando por ano e severidade
COUNT(*) as record_count
FROM station_data
GROUP BY 1,2; /*year*//*wind_severity*/

-- Usando uma instrução CASE para somar a precipitação (chuva) quando houver tornado e quando não houver tornado
SELECT year, month,
SUM(CASE WHEN tornado=1 THEN precipitation ELSE 0 END) as tornado_precipitation,
SUM(CASE WHEN tornado=0 THEN precipitation ELSE 0 END) as non_tornado_precipitation
FROM station_data
GROUP BY year, month;

SELECT month,
AVG(CASE WHEN (RAIN OR HAIL) THEN temperature ELSE 0 END) as avg_precipitation_temp,
AVG(CASE WHEN NOT (RAIN OR HAIL) THEN temperature ELSE 0 END) as non_avg_precipitation_temp
FROM station_data
WHERE year > 2000
GROUP BY month;

-- Jeito errado!! ESSA ESTRUTURA LIMITARIA A GENTE, POIS NÃO CONSEGUIRIAMOS COLOCAR TODOS OS FILTOS QUE QUEREMOS
SELECT month,
CASE
    WHEN RAIN OR HAIL THEN temperature
    WHEN NOT (RAIN OR HAIL) THEN temperature
    ELSE 0
END as percebiquenãodaparasepararemduascolunas
FROM station_data
WHERE year > 2000
GROUP BY month;
